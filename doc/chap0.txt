  
  
                                    [1X idrel [101X
  
  
                          [1X Identities among relations [101X
  
  
                                      2.44
  
  
                                  4 June 2022
  
  
                                 Anne Heyworth
  
                                 Chris Wensley
  
  
  
  Chris Wensley
      Email:    [7Xmailto:c.d.wensley@bangor.ac.uk[107X
      Homepage: [7Xhttps://github.com/cdwensley[107X
      Address:  [33X[0;14YDr. C.D. Wensley[133X
                [33X[0;14YSchool of Computer Science[133X
                [33X[0;14YBangor University[133X
                [33X[0;14YDean Street[133X
                [33X[0;14YBangor[133X
                [33X[0;14YGwynedd LL57 1UT[133X
                [33X[0;14YUK[133X
  
  
  
  -------------------------------------------------------
  [1XAbstract[101X
  [33X[0;0Y[5XIdRel[105X  is  a  [5XGAP[105X  package  originally  implemented in 1999, using the [5XGAP[105X 3
  language, when the first author was studying for a Ph.D. in Bangor.[133X
  
  [33X[0;0YThis  package  is  designed  to  compute a minimal set of generators for the
  module  of  the  identities  among relators of a group presentation. It does
  this using[133X
  
  [30X    [33X[0;6Yrewriting and logged rewriting: a self-contained implementation of the
        Knuth-Bendix  process  using the monoid presentation associated to the
        group presentation;[133X
  
  [30X    [33X[0;6Ymonoid polynomials: an implementation of the monoid ring;[133X
  
  [30X    [33X[0;6Ymodule  polynomials:  an  implementation of the right module over this
        monoid generated by the relators.[133X
  
  [30X    [33X[0;6YY-sequences:  used  as  a  [13Xrewriting[113X way of representing elements of a
        free  crossed  module  (products  of  conjugates of group relators and
        inverse relators).[133X
  
  [33X[0;0Y[5XIdRel[105X became an accepted [5XGAP[105X package in May 2015.[133X
  
  [33X[0;0YBug  reports,  suggestions  and  comments  are,  of  course, welcome. Please
  contact  the  last  author  at  [7Xmailto:c.d.wensley@bangor.ac.uk[107X or submit an
  issue             at             the            GitHub            repository
  [7Xhttps://github.com/gap-packages/idrel/issues/[107X.[133X
  
  
  -------------------------------------------------------
  [1XCopyright[101X
  [33X[0;0YÂ© 1999-2022 Anne Heyworth and Chris Wensley[133X
  
  [33X[0;0YThe [5XIdRel[105X package is free software; you can redistribute it and/or modify it
  under  the  terms of the GNU General Public License as published by the Free
  Software  Foundation;  either  version 2 of the License, or (at your option)
  any later version.[133X
  
  
  -------------------------------------------------------
  [1XAcknowledgements[101X
  [33X[0;0YThis  documentation  was prepared using the [5XGAPDoc[105X [LN17] and [5XAutoDoc[105X [GH17]
  packages.[133X
  
  [33X[0;0YThe   procedure   used   to   produce   new   releases   uses   the  package
  [5XGitHubPagesForGAP[105X [Hor14] and the package [5XReleaseTools[105X.[133X
  
  
  -------------------------------------------------------
  
  
  [1XContents (IdRel)[101X
  
  1 [33X[0;0YIntroduction[133X
    1.1 [33X[0;0YAn illustrative example[133X
  2 [33X[0;0YRewriting Systems[133X
    2.1 [33X[0;0YMonoid Presentations of FpGroups[133X
      2.1-1 FreeRelatorGroup
      2.1-2 MonoidPresentationFpGroup
      2.1-3 PrintLnUsingLabels
      2.1-4 InitialRulesOfPresentation
    2.2 [33X[0;0YRewriting systems for FpGroups[133X
      2.2-1 RewritingSystemFpGroup
      2.2-2 OnePassReduceWord
      2.2-3 OnePassKB
      2.2-4 RewriteReduce
      2.2-5 KnuthBendix
    2.3 [33X[0;0YEnumerating elements[133X
      2.3-1 ElementsOfMonoidPresentation
  3 [33X[0;0YLogged Rewriting Systems[133X
    3.1 [33X[0;0YLogged Knuth-Bendix Completion[133X
      3.1-1 InitialLoggedRulesOfPresentation
      3.1-2 LoggedOnePassKB
      3.1-3 LoggedRewriteReduce
      3.1-4 LoggedKnuthBendix
      3.1-5 LoggedRewritingSystemFpGroup
    3.2 [33X[0;0YLogged reduction of a word[133X
      3.2-1 LoggedReduceWordKB
  4 [33X[0;0YMonoid Polynomials[133X
    4.1 [33X[0;0YConstruction of monoid polynomials[133X
      4.1-1 MonoidPolyFromCoeffsWords
    4.2 [33X[0;0YComponents of a polynomial[133X
      4.2-1 Terms
      4.2-2 Monic
      4.2-3 AddTermMonoidPoly
    4.3 [33X[0;0YMonoid Polynomial Operations[133X
      4.3-1 Length
    4.4 [33X[0;0YReduction of a Monoid Polynomial[133X
      4.4-1 ReduceMonoidPoly
  5 [33X[0;0YModule Polynomials[133X
    5.1 [33X[0;0YConstruction of module polynomials[133X
      5.1-1 ModulePoly
      5.1-2 PrintLnModulePoly
    5.2 [33X[0;0YComponents of a module polynomial[133X
      5.2-1 Terms
    5.3 [33X[0;0YModule Polynomial Operations[133X
      5.3-1 AddTermModulePoly
  6 [33X[0;0YIdentities Among Relators[133X
    6.1 [33X[0;0YConstructing identities[133X
      6.1-1 RootIdentities
      6.1-2 IdentityRelatorSequences
      6.1-3 LogSequenceLessThan
      6.1-4 ExpandLogSequence
    6.2 [33X[0;0YIdentities for [22XS_3[122X[133X
      6.2-1 ReduceLogSequences
      6.2-2 ConjugateByWordLogSequence
      6.2-3 ChangeStartLogSequence
      6.2-4 InverseLogSequence
      6.2-5 CancelImmediateInversesLogSequence
    6.3 [33X[0;0YReducing identities[133X
      6.3-1 LogSequenceRewriteRules
      6.3-2 OnePassReduceLogSequence
      6.3-3 MoveRightLogSequence
      6.3-4 SubstituteLogSubsequence
    6.4 [33X[0;0YThe original approach[133X
      6.4-1 IdentitiesAmongRelators
      6.4-2 IdentityYSequences
    6.5 [33X[0;0YPartial lists of elements[133X
      6.5-1 PartialElementsOfMonoidRepresentation
  
  
  [32X
